# Docker构建和测试CI
name: Docker Build and Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-build:
    name: Docker Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        run: |
          docker build -t rag-chatbot:test .
      
      - name: Test Docker image
        run: |
          # Test if the container starts successfully
          docker run --name test-container -d \
            -e OPENAI_API_KEY=dummy \
            -e QDRANT_URL=dummy \
            -p 8501:8501 rag-chatbot:test
          
          # Wait for container to start
          sleep 10
          
          # Check if container is running
          docker ps | grep test-container
          
          # Cleanup
          docker stop test-container
          docker rm test-container
      
      - name: Security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rag-chatbot:test'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Check for secrets in code
        run: |
          # Simple check for hardcoded secrets
          if grep -r "sk-[a-zA-Z0-9]" src/ || \
             grep -r "OPENAI_API_KEY.*=" src/ | grep -v "os.environ" || \
             grep -r "password.*=" src/ | grep -v "os.environ"; then
            echo "❌ Found potential hardcoded secrets!"
            exit 1
          else
            echo "✅ No hardcoded secrets detected"
          fi
      
      - name: Docker image size check
        run: |
          # Check Docker image size
          SIZE=$(docker image inspect rag-chatbot:test --format='{{.Size}}')
          SIZE_MB=$((SIZE / 1024 / 1024))
          echo "Docker image size: ${SIZE_MB} MB"
          
          # Warn if image is too large (> 2GB)
          if [ $SIZE_MB -gt 2048 ]; then
            echo "⚠️ WARNING: Docker image is quite large: ${SIZE_MB} MB"
          else
            echo "✅ Docker image size is acceptable: ${SIZE_MB} MB"
          fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif' 